<?xml version="1.0" encoding="UTF-8"?>
<!--
Internal units
Mass : fg
Length : um (u stands for micro)
Time : hour
-->

<!--
This is a protocol to compare with the optimal repair found in Clegg et al. Here, the damage accumulation
rate is 0.22, repair is adaptive, damage is toxic, division is symmetric and Mumax is 1.2. The environment is constant, the output is hours,
and the end of simulation is 100 days.
-->

<idynomics>
	<!--SIMULATOR-->
	<simulator>
	    <!--Set quietMode to true if you want to suppress logFile output to a minimum-->
	    <param name="quietMode">false</param>
		<param name="restartPreviousRun">false</param>
		<param name="randomSeed">814</param>
		<!--Analysis of the results is based on the population growth rate at day-intervals-->
		<param name="outputPeriod" unit="day">1</param>
		<timeStep>
			<param name="adaptive">false</param>
			<param name="timeStepIni" unit="hour">0.01</param>
			<param name="endOfSimulation" unit="day">100</param>
		</timeStep>
		<!--This is the constant environment, but we use the  chemostat without dilution to simulate this.-->
		<param name="chemostat">true</param>
		<param name="agentTimeStep" unit="hour">0.01</param>
		<!--This is not a competition, and we want the simulation run for the entire duration-->
        <param name="invComp">false</param> 
	</simulator>

	<!--SOLUTES-->
  	<solute domain="chemostat" name="glucose">
  		<param name="diffusivity" unit="m2.day-1">5.86e-5</param>
  	</solute>

	<!--PARTICLES-->
	<!--Density of all biomass types is the same-->
	<particle name="activeBiomassGrowth">
		<param name="density" unit="g.L-1">290</param>
	</particle>
	<particle name="activeBiomassRepair">
		<param name="density" unit="g.L-1">290</param>
	</particle>

    <particle name="inactiveBiomassGrowth">
		<param name="density" unit="g.L-1">290</param>
	</particle>
	<particle name="inactiveBiomassRepair">
		<param name="density" unit="g.L-1">290</param>
	</particle>

	<world>
	    <!-- We use a chemostat with constant bulk concentrations to simulate the constant environment.-->
		<bulk name="chemostat">
		
			<param name="isConstant">true</param>
			<param name="D" unit="h-1">0.0</param>

			<solute name="glucose">
				<param name="Sbulk" unit="g.L-1">0.00234</param>
				<param name="Sin" unit="g.L-1">0.00234</param>
			</solute>

		</bulk>

	<!--DOMAIN-->
	    <!--(unimportant in the constant environment)-->
		<computationDomain name="chemostat">		
			<grid nDim="1" nI="1" nJ="1" nK="1"/>
			<param name="resolution" unit="um">2.15e3</param>

			<boundaryCondition class="BoundaryBulk" name="yNz">
				<param name="activeForSolute">yes</param>
				<param name="bulk">chemostat</param>
				<shape class="Planar">
					<param name="pointIn" i="33" j="0" k="0"/>
					<param name="vectorOut" i="1" j="0" k="0"/>
				</shape>
			</boundaryCondition>

			<boundaryCondition class="BoundaryZeroFlux" name="y0z">
				<shape class="Planar">
					<param name="pointIn" i="-1" j="0" k="0"/>
					<param name="vectorOut" i="-1" j="0" k="0"/>
				</shape>
			</boundaryCondition>

			<boundaryCondition class="BoundaryCyclic" name="x0z">
				<shape class="Planar">
					<param name="pointIn" i="0" j="-1" k="0"/>
					<param name="vectorOut" i="0" j="-1" k="0"/>
				</shape>
				<shape class="Planar">
					<param name="pointIn" i="0" j="33" k="0"/>
					<param name="vectorOut" i="0" j="1" k="0"/>
				</shape>
			</boundaryCondition>

			<boundaryCondition class="BoundaryCyclic" name="x0y">
				<shape class="Planar">
					<param name="pointIn" i="0" j="0" k="-1"/>
					<param name="vectorOut" i="0" j="0" k="-1"/>
				</shape>
				<shape class="Planar">
					<param name="pointIn" i="0" j="0" k="1"/>
					<param name="vectorOut" i="0" j="0" k="1"/>
				</shape>
			</boundaryCondition>
		</computationDomain>
	</world>

	<!--REACTIONS-->
		<!--growth: muMax = 1.2 (actual growth rate will depend upon how much of the biomass is invested into 			repair and damaged biomass, but this is the maximum allowed)-->
  	<reaction catalyzedBy="activeBiomassGrowth" class="ReactionFactor" name="growthR">
  		<param name="muMax" unit="hour-1">1.2</param>
  		<kineticFactor class="MonodKinetic" solute="glucose">
  			<param name="Ks" unit="g.L-1">2.34e-3</param>
  		</kineticFactor>
    		<yield>
  			<param name="activeBiomassGrowth" unit="g.g-1">1.0</param>
  			<param name="activeBiomassRepair" unit="g.g-1">1.0</param>
  		</yield>
  	</reaction>
		<!--damage accumulation rate a: 0.22 (this is because damage in this reaction is proportional to specific 		growth rate).-->
  	<reaction catalyzedBy="activeBiomassGrowth" class="ReactionFactor" name="aging">
  		<param name="muMax" unit="hour-1">0.22</param>
  		<kineticFactor class="FirstOrderKinetic"/>
  		<yield>
  			<param name="activeBiomassGrowth" unit="g.g-1">-1.0</param>
  			<param name="activeBiomassRepair" unit="g.g-1">-1.0</param>
  			<param name="inactiveBiomassGrowth" unit="g.g-1">1.0</param>
  			<param name="inactiveBiomassRepair" unit="g.g-1">1.0</param>
  		</yield>
  	</reaction>

	<!--SOLVER (Reactions)-->
    <solver class="Solver_chemostat" name="solver1" domain="chemostat">
        <param name="rtol">1e-3</param>
	 	<param name="hmax">1e-3</param>
		<param name="active">true</param>
		<reaction name="growthR"/>
		<reaction name="aging"/>
	</solver>
	
  	<!--GRID-->
  	<!-- erosionMethod=false tells iDynoMiCS to keep the population capped at 1000-->
	<agentGrid>
		<param name="computationDomain">chemostat</param>
        <param name="erosionMethod">false</param>
	</agentGrid>

	
	
	<species class="AgingBac" name="OldieA">
	<!--This is a single species simulation. This strategy has symmetric division and fixed repair.-->
		<species class="AgingBac" name="OldieA">
		<particle name="activeBiomassGrowth">
			<param name="mass" unit="fg">0.0</param>
		</particle>
		<particle name="activeBiomassRepair">
			<param name="mass" unit="fg">0.0</param>
		</particle>
		<particle name="inactiveBiomassGrowth">
			<param name="mass" unit="fg">0.0</param>
		</particle>
		<particle name="inactiveBiomassRepair">
			<param name="mass" unit="fg">0.0</param>
		</particle>
		<!--distMethod=true tells iDynoMiCS to choose each cell's initial active biomass
		from an exponential distribution (rather than a Gaussian distribution)-->
		<param name="distMethod">true</param>
		<param name="computationDomain">chemostat</param>
		<!--Cells divide once they reach a radius of divRadius (all modelled as spheres)-->
		<param name="divRadius" unit="um">0.8</param>
		<param name="divRadiusCV">0.00</param>
		<!--The fraction of total biomass the newly-created cell receives at division.
		This is allowed to vary randomly by a Gaussian distribution, mean babyMassFrac=0.5 and
		standard deviation (babyMassFrac*babyMassFracCV)=0.025. This prevents synchronous growth-->
		<param name="babyMassFrac">0.5</param>
		<param name="babyMassFracCV">0.05</param>
		<!--Cells die once they reach a radius of deathRadius (all modelled as spheres)-->
  		<param name="deathRadius" unit="um">0</param>
  		<param name="deathRadiusCV" unit="um">0</param>
		<!--alpha=0.0 meaning that this is a symmetric strategy, set to 1.0 for asymmetric-->
		<param name="alpha">0.0</param>
		<!--beta=0.07 means that this is an investment into repair of 0.07, set to 0.0 for no repair or adaptive 		repair.-->
        	<param name="beta">0.07</param> <!--investment in repair-->
		<!--repair yield is 80%-->
	        <param name="repY">0.8</param> <!--repair yield-->
		<!--set isOptimalRepair=true if this uses adaptive repair.-->
	        <param name="isOptimalRepair">false</param> <!--is repair optimal-->
		<!--damage is toxic for all cells in these simulations.-->
	        <param name="isToxic">true</param> <!--is damage toxic-->
		<!--Aging here is proportional to specific growth rate, set to false if this is not wanted. Previous versions didn't have this option, so this was changed manually in the source code.-->
		<param name="isProportionalAging">true</param>
  		<!--Reactions-->
		<reaction name="growthR" status="active"/>
		<reaction name="aging" status="active"/>
  	<!--INITIALISATION-->
	<!--Starting the simulation with 1000 cell.-->
		<initArea number="1000">
			<param name="birthday" unit="hour">0</param>
			<coordinates i="0" j="0" k="0"/>
			<coordinates i="1" j="1" k="0"/>
		</initArea>
	</species>

</idynomics>
