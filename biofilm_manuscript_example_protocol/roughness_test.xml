<?xml version="1.0" encoding="UTF-8"?>

<!--
Internal units
Mass : fg
Length : um (u stands for micro)
Time : hour
-->

<!--
This is a protocol to look at the effect that varying parameters for Sbulk has on the structure (roughness) of the resulting biofilm.
These simulations were carried out without aging or repair and Mumax is 1.2. The environment is biofilm, the output is hours and the end of the simulation is 25 days. This is a single species biofilm (it doesn't matter which species as there is no aging or repair).
-->

<idynomics>

	<!--SIMULATOR-->
	<simulator>
		<param name="restartPreviousRun">false</param>
		<param name="randomSeed">814</param>
		<!--Analysis of the results is based on the population growth rate at 1-hour intervals-->
		<param name="outputPeriod" unit="hour">1</param>
		<timeStep>
			<param name="adaptive">false</param>
			<param name="timeStepIni" unit="hour">0.05</param>
			<!--The end of the simulation is on day 25 if the maximum biofilm height has not yet been reached.-->
			<param name="endOfSimulation" unit="day">25</param>
		</timeStep>
		<param name="agentTimeStep" unit="hour">0.05</param>
	</simulator>
  	<!--INPUT-->
  	<input>
		<!--Here we used input files that gave initial evenly spaced placement of cells -->
  		<param name="useAgentFile">true</param>
        <param name="inputAgentFileURL">agent_State_spacing.xml</param>
  	</input>
	<!--SOLUTES-->
  	<solute domain="biofilm" name="glucose">
  		<param name="diffusivity" unit="m2.day-1">5.86e-5</param>
  	</solute>
  	<solute domain="biofilm" name="pressure">
		<param name="diffusivity" unit="m2.day-1">1</param>
	</solute>

	<!--PARTICLES-->
	<!--Density of all biomass types is the same-->
	<particle name="activeBiomassGrowth">
		<param name="density" unit="g.L-1">201</param>
	</particle>
	<particle name="activeBiomassRepair">
		<param name="density" unit="g.L-1">201</param>
	</particle>

    <particle name="inactiveBiomassGrowth">
		<param name="density" unit="g.L-1">201</param>
	</particle>
	<particle name="inactiveBiomassRepair">
		<param name="density" unit="g.L-1">201</param>
	</particle>

	<world>
	<!--BULK-->
		<bulk name="tank">
		
			<param name="isConstant">true</param>
			<param name="D" unit="h-1">0.6</param>

			<!-- Change this for different delta squared
			0.000889 = Low
			0.003556 = Medium
			0.014222 = High 
			These values should be changed to vary the mass transport. The parameters used are mid-values.-->
			<solute name="glucose">
				<param name="Sbulk" unit="g.L-1">0.003556</param>
				<param name="Sin" unit="g.L-1">0.003556</param>
			</solute>
			<solute name="pressure">
				<param name="Sbulk" unit="g.L-1">0</param>
				<param name="Sin" unit="g.L-1">0</param>
			</solute>
			

		</bulk>

	<!--DOMAIN-->
		<!--This is a biofilm simulation.-->
		<computationDomain name="biofilm">		
			<grid nDim="2" nI="65" nJ="65" nK="1"/>
			<param name="resolution" unit="um">4</param>
            <param name="boundaryLayer" unit="um">48</param>
  			<param name="biofilmDiffusivity">1</param>
  			<param name="specificArea" unit="m2.m-3">80</param>

			<boundaryCondition class="BoundaryBulk" name="yNz">
				<param name="activeForSolute">yes</param>
				<param name="bulk">tank</param>
				<shape class="Planar">
					<param name="pointIn" x="65" y="0" z="0"/>
					<param name="vectorOut" x="1" y="0" z="0"/>
				</shape>
			</boundaryCondition>

			<boundaryCondition class="BoundaryZeroFlux" name="y0z">
				<shape class="Planar">
					<param name="pointIn" x="-1" y="0" z="0"/>
					<param name="vectorOut" x="-1" y="0" z="0"/>
				</shape>
			</boundaryCondition>

			<boundaryCondition class="BoundaryCyclic" name="x0z">
				<shape class="Planar">
					<param name="pointIn" x="0" y="-1" z="0"/>
					<param name="vectorOut" x="0" y="-1" z="0"/>
				</shape>
				<shape class="Planar">
					<param name="pointIn" x="0" y="65" z="0"/>
					<param name="vectorOut" x="0" y="1" z="0"/>
				</shape>
			</boundaryCondition>

			<boundaryCondition class="BoundaryCyclic" name="x0y">
				<shape class="Planar">
					<param name="pointIn" x="0" y="0" z="-1"/>
					<param name="vectorOut" x="0" y="0" z="-1"/>
				</shape>
				<shape class="Planar">
					<param name="pointIn" x="0" y="0" z="1"/>
					<param name="vectorOut" x="0" y="0" z="1"/>
				</shape>
			</boundaryCondition>
		</computationDomain>
	</world>

	<!--REACTIONS-->
		<!--Growth-->
		<!--growth: muMax = 1.2 -->

  	<reaction catalyzedBy="activeBiomassGrowth" class="ReactionFactor" name="growth">
  		<param name="muMax" unit="hour-1">1.2</param>
  		<kineticFactor class="MonodKinetic" solute="glucose">
  			<param name="Ks" unit="g.L-1">2.34e-3</param>
  		</kineticFactor>
    		<yield>
  			<param name="glucose" unit="g.g-1">-2.25</param>
  			<param name="activeBiomassGrowth" unit="g.g-1">1.0</param>
  			<param name="activeBiomassRepair" unit="g.g-1">1.0</param>
  		</yield>
  	</reaction>
		<!--Aging-->
		<!--damage accumulation rate a = 0 (we are not looking at the effects of aging in these simulations, just trying to determine parameters that give rise to typical biofilm structures.-->
  	<reaction catalyzedBy="activeBiomassGrowth" class="ReactionFactor" name="aging">
  		<param name="muMax" unit="hour-1">0.0</param>
  		<kineticFactor class="FirstOrderKinetic"/>
  		<yield>
  			<param name="activeBiomassGrowth" unit="g.g-1">-1.0</param>
  			<param name="activeBiomassRepair" unit="g.g-1">-1.0</param>
  			<param name="inactiveBiomassGrowth" unit="g.g-1">1.0</param>
  			<param name="inactiveBiomassRepair" unit="g.g-1">1.0</param>
  		</yield>
  	</reaction>

	<!--SOLVER (Reactions)-->

	<!-- Parameters related to the solver itself: rtol stands for the relative tolerance of the calculated error;
		hmax is maximum internal step of the solver. -->
		
    <solver class="Solver_multigrid" name="solver1" domain="biofilm">
		<param name="active">true</param>
		<param name="preStep">150</param>
		<param name="postStep">150</param>
		<param name="coarseStep">1500</param>
		<param name="nCycles">5</param>
		<reaction name="growth"/>
		<reaction name="aging"/>
	</solver>
	<solver class="Solver_pressure" name="pressure" domain="biofilm">
		<param name="active">true</param>
	</solver>
	
  	<!--GRID (Detachment & Shoving)-->
	<agentGrid>
		<param name="computationDomain">biofilm</param>
		<param name="resolution" unit="um">4</param>
  		<detachment class="DS_SolGrad">
  			<!-- Change this to add in detachment -->
  			<param name="kDet" unit="um-1.hour-1">0</param>
  			<!-- Change this to change when the biofilm stops growing and the simulation stops -->
  			<param name="maxTh" unit="um">154</param>
  			<param name="endSimWhenMaxThCrossed">true</param>
  		</detachment>
		<param name="shovingMaxNodes">2e6</param>
		<param name="shovingFraction">0.025</param>
		<param name="shovingMaxIter">250</param>
		<param name="shovingMutual">true</param>
		<!-- erosionMethod: true  -> shrinkOnBorder, 
				    false -> removeOnBorder  -->
		<param name="erosionMethod">false</param>
		<param name="sloughDetachedBiomass">true</param>
	</agentGrid>

	<!--SPECIES-->
	<!--Only species - note that parameters related to aging/repair/damage toxicity still exist as they are expected inputs, but don't matter here-->
	<species class="AgingBac" name="OldieA">
		<particle name="activeBiomassGrowth">
			<param name="mass" unit="fg">0.0</param>
		</particle>
		<particle name="activeBiomassRepair">
			<param name="mass" unit="fg">0.0</param>
		</particle>
		<particle name="inactiveBiomassGrowth">
			<param name="mass" unit="fg">0.0</param>
		</particle>
		<particle name="inactiveBiomassRepair">
			<param name="mass" unit="fg">0.0</param>
		</particle>
  		<param name="color">blue</param>
		<!--distMethod=true tells iDynoMiCS to choose each cell's initial active biomass
		from an exponential distribution (rather than a Gaussian distribution)-->
		<param name="distMethod">true</param>
		<param name="computationDomain">biofilm</param>
		<!--Cells divide once they reach a radius of divRadius (all modelled as spheres)-->
		<param name="divRadius" unit="um">0.8</param>
		<param name="divRadiusCV">0.0</param>
		<!--The fraction of total biomass the newly-created cell receives at division.
		This is allowed to vary randomly by a Gaussian distribution, mean babyMassFrac=0.5 and
		standard deviation (babyMassFrac*babyMassFracCV)=0.025. This prevents synchronous growth--> 
		<param name="babyMassFrac">0.5</param>
		<param name="babyMassFracCV">0.05</param>
		<!--Cells die once they reach a radius of deathRadius (all modelled as spheres). This can't really happen in a biofilm, as cells will effectively stop aging when their specific growth rate is too low. But also won't happen here as cells in this model only die if they accumulate too much damage, and here we have no damage accumulation.-->
  		<param name="deathRadius" unit="um">0</param>
  		<param name="deathRadiusCV" unit="um">0</param>
  		<param name="shoveFactor" unit="um">1.1</param>
  		<param name="shoveLimit" unit="um">0</param>
		<param name="alpha">0.0</param>
		<param name="beta">0.00</param>
		<param name="repY">0.8</param>
		<param name="isOptimalRepair">false</param>
		<param name="isToxic">true</param>
  		
  		<!--Reactions-->
		<reaction name="growth" status="active"/>
		<reaction name="aging" status="active"/>
		<!--Initialisation is not provided here as these simulations used files as input that give the initial positions of cells. -->
	</species>

</idynomics>
